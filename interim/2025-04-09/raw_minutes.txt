# CoRE Virtual interim - 2025-04-09 - 14:00-15:30 UTC

Chairs:

* Marco Tiloca, RISE
* Jaime Jiménez, Ericsson
* Carsten Bormann, TZI

## Remote instructions

Meetecho: https://meetings.conf.meetecho.com/interim/?group=dbc1306a-dc17-43ea-b5a2-b40ed22d6785
Material: https://datatracker.ietf.org/meeting/interim-2025-core-05/session/core
Notes: https://notes.ietf.org/notes-ietf-interim-2025-core-05-core
Zulip: https://zulip.ietf.org/#narrow/stream/core

Minute takers: Rikard Höglund
Chat monitor: Marco Tiloca

### Note Well

Remember that the [note well](https://www.ietf.org/about/note-well/) applies, for [IPR](https://tools.ietf.org/html/bcp79) but also for [WG processes](https://tools.ietf.org/html/bcp25) and [code of conduct](https://tools.ietf.org/html/bcp54). Please be nice to each other.

### Chat & Minutes / Agenda bashing

## Agenda

* draft-ietf-core-conditional-attributes-11

   https://datatracker.ietf.org/doc/draft-ietf-core-conditional-attributes/

   Define handling of future/unknown c.* conditional query parameters ?

   *  Related email thread: https://mailarchive.ietf.org/arch/msg/core/pMwW3vVRVMjGiA7F91jM65QXxMc/
   *  Also: Text needed in corr-clar about unknown query parameters in safe (unsafe?) requests?

  Presented slides: https://datatracker.ietf.org/meeting/interim-2025-core-05/materials/slides-interim-2025-core-05-sessa-query-parameters-the-web-and-corr-clar-01.pdf

ED: In the draft conditional params are defined, together with a registry allowing registration of new ones. The client can indicate instructions to the server by using these.
ED: Main question: What if the client uses a conditional parameter together with observe towards a server which does not support the parameter? What should the server do? 1. The server responds with an error. 2. The server ignores the unsupported params. 3. Other ways? For example, other specifications like LwM2M can define detailed bahavior.
ED: The conditional parameters could be recognized by their format (c.X). Discussion also took place on the mailing list.

CB: Showing slides about corr-clar. Clarification on this topic is needed. To avoid confusion: This is about query parameters (content of Uri-Query option(s)), not about target attributes (for which there is also an IANA registry).
CB (p3): Recap of query parameters from RFC 7252. It states: "The query serves to further parameterize the resource", Not accurate, although another statement says "Uri-Host, Uri-Port, Uri-Path, and Uri-Query Options are used to specify the target resource of a request to a CoAP origin server"
CB (p4): Per RFC 3986 (URIs), the query component of a URI is an actual part of the resource identifier. A different query component means a different resource. Same in RFC 9110 (HTTP semantics).
CB (p5): Per BCP 190, it's up to a server to decide how a resource looks like. Newly defined but not reserved/register are under risk of collision.
Using a prefix to indicate parameters as "special" may not be good.

CB (p6): HTML uses forms to tell the client how to prepare requests. The client follows that guideline when preparing a URI (for GET) or the actual request content (for POST). Ultimately, the server is in control.
CB (p7): Another thing is APIs. Human-readable documents with information on how to create a request. Not under the server's control. Question: Are conditional attributes part of an API?
CB (p8): BCP190 doesn't really take the API approach, but really thinks of URIs as links. Sure it doesn't say specifically that IoT application cannot think differently.
CB (p9): HTTP QUERY method has been in the making for a long time. Can have a body like POST, but is idempotent, cacheable and safe like GET. This looks similar to FETCH for CoAP.
CB (p10): QUERY does not deviate from expectations and keep thinking of the server as in control of the URI space. Every combination of QUERY inputs is considered a distinct resource.
CB (p11): Do these principles discussed (server is in control), apply also to the "Thing Web", not just the "Big Web"? I think we need a good reason to deviate. It's good if the two world remains aligned, thinking also of possible cross-proxies that don't have to or cannot do miracles.

CB (p12): What for corr-clar? For example, we have jsut implicitly inherited principles from the big web. Should we explicitly adopt and endorse those?
CB (p13): Source of confusoin: query parameters (in Uri-Query CoAP options, see RFC 7252) vs. target attributes for CoRE Link Format (see RFC 6690) vs. "conditional attributes" that are actually query parameters per a convention that can be described by the target attribute if=

ED: On the server control. The server can announce the way it see things, and constrained acceptable URIs using if=.
CB: Yes, except that if you use the server you must use what the server says. But the point of the target attribute is that the client knows that the server declares to have a specific behaviour.
ED: The server can still implement the query parameters from the draft and yet other query parameters for something different.
CB: By saying if=X the server indicates it won't do something different but all conditional attributes it offers fit in the API scheme
ED: Is this sufficient for the BCPs? Client can discover how to interact with the server, and the server is free to use it.
CB: Strong statement in BCP190, by having the server declare the target attribute it can assure the client that new conditional attributes the server doesn't support will be ignored.
ED: Currently no discovery mechanism is defined. By design the client should know, this seems less compatible with the BCPs(?)

ED: One proposal was to define an interface to announce as value for the target attribute if=. That indicates supports for those query parameters and make things more flexible.
CB: Interface attribute can be implied by the resource type attribute
ED: What to do with unrecognized query params? Most future-proof solution seems to be to ignore them. Client will get more notifications than it asked for, but observe will work.
MT: Interface sounds good. On the supported or not params: Christian proposed building on the interface to consider no-op params those that are non-supported conditional query params. On what to do with other query parameters, that's left for somewhere else.
CB: Point of the "if=" target attribute is that the client knows it can try new query params without being punished. I think we don't need "must support"
DR: Good to talk about "must understand". Query parameters saying something like rate limit being ignored is different than ignoring a parameter that limits the scope of a query. If limiting params are ignored it can make the response creation fail (out of memory), thus it can be better to explicitly let the client know that the query param was not supported to let the client retry in a different way. Allowing the client to send a request with a "must understand" bit can be useful. So the parameters could be individually possible to indicate as "must understand" or not.

ED: The draft is of course using the Uri-Query option as we know it.
CB: Use c. but let c be upper case or not (joking)
ED: What about using CoAP options?

CB: The server still has to rely on good default values, irrespective of the possible use of query conditional attributes, to be sure to not have to often fail and return 5.03.
ED: Some query params may increase the rate of notifications. Risk of overload. Server should choose good defaults.

MT: For conditional attributes draft we have a way forward by defining an interface for discovery. And the no-op semantic for unknown conditional query params. Thinking about other query parameters it goes back to corr-clar, it seems good to stay aligned with the big web, so does that mean failing with 4.04 for unrecognized query parameters?
CB: If a server decides it understands all query params starting with c. but the implementation chooses to ignore them, that is a choice the server can do. But should we require servers to do that?

ED: You mentioned 4.04, the resource is not there. That can still be counter intuitive for people thinking the resource is identified by the Uri-Path and the Query-Parameters are "instructions". But maybe that is the wrong model.

ED: What is the state for conditional query parameters draft?
MT: Authors are processing shepherd review and more comments came after the review

MT: Do you see a reason for the server being able to tell the client which query parameters were not understood (like using problem details)
CB: Yes makes sense, just for diagnostic.
ED: Yes
MT: That would be a standard problem detail entry.
CB: Yes.
DR: Absolutely. I vote for returning a 4.00 Bad request: "Malformed request syntax". It's not exactly "not found", unless you take a strict reading (although the documents may be saying this) which can be confusing. Then it's good to provide diagnostic information with the reason for the error, but don't be too fine grained.
CB: Have RFC9290 defining concise problem details. Can be very compact in CoAP.
ED: Also defined how these go into CoAP error responses?
CB: Yes. We should look into registering a standard key for ...
MT: Body would be list of unsupported query params, or first one (which caused the failure)

DR: We enjoy the "parameter out of range" error code. That can be helpful. Not understanding the query parameter versus understanding it but not being able to indicate its indicated value
MT: Feels more like a 4.00

* draft-bormann-core-yang-sid-pen-02

   https://datatracker.ietf.org/doc/draft-bormann-core-yang-sid-pen/

   https://mailarchive.ietf.org/arch/msg/core/6BfvBlWNloqG4zq9V5LGhHt8roI/

   WG Adoption Call?

CB: Overview of the work. Can get rid of text-based names of positions in the schema tree. Replacing these with numeric identifiers. RFC9595 defined an elaborate registration system. This is all good. But some felt it was too complex and required too much effort.
CB: To simplify this, some people have a Private Enterprise Number (PEN). That can help create SIDs for one's application, as one doesn't really have to do anything for their generation and just use them.
CB: The draft defines how one gets 100 000 64-bit SIDs from one's PEN and 10 000 32-bit SIDs more for those with lowest value of PEN. This is supposed to cover a long time frame.
MT: Discussion on list with positive feedback. Some wanted to reduce sizes, but comments were withdrawn. Think we have enough to start an adoption call. Any objections? (Will continue on list)
ED: Which WG should this belong to? It's about YANG and SIDs.
CB: RFC9595 defining the related YANG CBOR was from this WG, so I think it should be CoRE.
ED: What was the size, 1 million?
CB: Think it was 100 000 64 bit and 10 000 32 bits.
MT: Think the 10 000 was only for those with lowest PEN value
MT: Will have adoption call on list

### AOB

---

*[MT]: Marco Tiloca
*[JJ]: Jaime Jiménez
*[FP]: Francesca Palombini
*[JPM]: John Preuß Mattsson
*[CB]: Carsten Bormann
*[CA]: Christian Amsüss
*[KH]: Klaus Hartke
*[RH]: Rikard Höglund
*[TF]: Thomas Fossati
*[DN]: David Navarro
*[GS]: Göran Selander
*[BS]: Bilhanan Silverajan
*[AS]: Alan Soloway
*[MCR]: Michael Richardson
*[AK]: Ari Keränen
*[MJK]: Michael Koster
*[NW]: Niklas Widell
*[ED]: Esko Dijk
*[HB]: Henk Birkholz
*[ST]: Sean Turner (here)
*[ML]: Martine Lenders
*[MW]: Matthias Wählisch
*[KZ]: Koen Zandberg
*[GF]: Giuseppe Fioccola
*[MN]: Massimo Nilo
*[LT]: Laurent Toutain
*[AB]: Andy Bierman
*[JT]: Jernei Tuliak
*[KZ]: Koen Zandberg
*[RM]: Rafael Marin-Lopez
*[AF]: Alex Fernandez
*[JS]: Jon Shallow

